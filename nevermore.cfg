[mcu nevermore]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6616407E3691627-if00

[fan_generic nevermore]
pin: nevermore: gpio14
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
tachometer_pin: nevermore: gpio20
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
[aht21]
[sgp40]

[temperature_sensor nevermore_intake]
sensor_type: AHT21
i2c_mcu: nevermore
i2c_bus: i2c0e
i2c_speed: 400000

[gcode_macro QUERY_AHT_CHAMBER]
gcode:
    {% set sensor = printer["aht21 nevermore_intake"] %}
    {action_respond_info("Nevermore Intake...\n"
        "Temperature: %.2f C\n"
        "Humidity: %.2f%%\n" % (
            sensor.temperature,
            sensor.humidity))} 

[temperature_sensor nevermore_exhaust]
sensor_type: AHT21
i2c_mcu: nevermore
i2c_bus: i2c1e
i2c_speed: 400000

[gcode_macro QUERY_AHT_OUTSIDE]
gcode:
    {% set sensor = printer["aht21 nevermore_exhaust"] %}
    {action_respond_info("Nevermore Exhaust...\n"
        "Temperature: %.2f C\n"
        "Humidity: %.2f%%\n" % (
            sensor.temperature,
            sensor.humidity))} 

[temperature_sensor intake]
sensor_type: SGP40
# [sgp40 sgp40_chamber]
i2c_mcu: nevermore
i2c_bus: i2c0e
ref_temp_sensor: aht21 nevermore_intake
ref_humidity_sensor: aht21 nevermore_intake
i2c_speed: 400000
# csv_basename: /tmp/sgp40_chamber

[gcode_macro QUERY_SGP_FORTY_CHAMBER]
gcode:
    {% set sensor = printer["sgp40 intake"] %}
    {action_respond_info("Nevermore Intake...\n"
        "Air Quailty: %.2f \n" % (
            sensor.voc))}

[temperature_sensor exhaust]
sensor_type: SGP40 # Sensor on the right
# [sgp40 sgp40_outside]
i2c_mcu: nevermore
i2c_bus: i2c1e
ref_temp_sensor: aht21 nevermore_exhaust
ref_humidity_sensor: aht21 nevermore_exhaust
i2c_speed: 400000
# csv_basename: /tmp/sgp40_outside

[gcode_macro QUERY_SGP_FORTY_OUTSIDE]
gcode:
    {% set sensor = printer["sgp40 exhaust"] %}
    {action_respond_info( "Nevermore Exhaust...\n"
        "Air Quailty: %.2f \n" % (
            sensor.voc))}

[neopixel nevermore]
pin: nevermore: gpio1
chain_count: 18

[gcode_macro NEVERMORE_ON]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=1

[gcode_macro NEVERMORE_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0

[gcode_macro _BASELINE_VARIABLES]
variable_time_min: 10  #time in minutes
variable_sensor_outside_voc: 0
variable_sensor_inside_voc: 0
variable_count: 0  #needs to be 1 for the first time we go through
gcode:

[delayed_gcode BASELINE_CALC] #need to start START_VOC_DATA before calling this delayed macro
initial_duration: 0
gcode:
    {% set sensor1 = printer["sgp40 intake"] %}
    {% set sensor2 = printer["sgp40 exhaust"] %}
    {% set sensor_outside_temp = printer['gcode_macro _BASELINE_VARIABLES'].sensor_outside_voc|float %}
    {% set sensor_inside_temp = printer['gcode_macro _BASELINE_VARIABLES'].sensor_inside_voc|float %}
    {% set count_temp = printer['gcode_macro _BASELINE_VARIABLES'].count|int %}
    {% set time_temp = printer['gcode_macro _BASELINE_VARIABLES'].time_min|int %}
    {% if count_temp < time_temp %}
       SET_GCODE_VARIABLE MACRO=_BASELINE_VARIABLES VARIABLE=sensor_outside_voc VALUE={sensor_outside_temp + sensor2.gas}
       SET_GCODE_VARIABLE MACRO=_BASELINE_VARIABLES VARIABLE=sensor_inside_voc VALUE={sensor_inside_temp + sensor1.gas}
       SET_GCODE_VARIABLE MACRO=_BASELINE_VARIABLES VARIABLE=count VALUE={count_temp +1}
       {action_respond_info ("VOC index intake %.2f : VOC index exhaust %.2f\n" % (sensor1.gas, sensor2.gas))}
       UPDATE_DELAYED_GCODE ID=BASELINE_CALC DURATION=60  #every sixty second or 1 min
    {% else %}
       SAVE_VARIABLE VARIABLE=baseline_inside_voc VALUE={(sensor_inside_temp/time_temp)} 
       SAVE_VARIABLE VARIABLE=baseline_outside_voc VALUE={(sensor_outside_temp/time_temp)}
       {action_respond_info (
                            "baseline exhaust VOC index: %.2f\n"
                            "baseline chamber VOC index: %.2f" % (
                              sensor_outside_temp,
                              sensor_inside_temp))}
       #STOP_VOC_DATA
       UPDATE_DELAYED_GCODE ID=BASELINE_CALC DURATION=0  #stop updating GCODE
    {% endif %}

############################################################################
#8/7/2022 need to work on
###########################
#keep nevermore on until internal voc matches external voc
###########################
[delayed_gcode REMOVE_VOC]
initial_duration: 0
gcode:
    {% set sensor1 = printer["sgp40 intake"] %}
    {% set sensor2 = printer["sgp40 exhaust"] %}
    {% set total_time=1|int %}
    {% set check_time = 10 %}
    {action_respond_info("Cleaning VOC from Chamber ")}
    {% if sensor1.gas > sensor2.gas %}
        NEVERMORE_ON
        UPDATE_DELAYED_GCODE ID=REMOVE_VOC DURATION={check_time} #check every 10s
        {action_respond_info("Cleaning VOC from Chamber ")}  #for testing purposes
        {% set check_time = check_time + 1%}
    {% else %} # sensor1 <= sensor2
        UPDATE_DELAYED_GCODE ID=REMOVE_VOC DURATION=0
        NEVERMORE_OFF
        # STOP_VOC_DATA
        {action_respond_info("Chamber VOC Removed in %.2f seconds\n" % check_time)}
    {% endif%}

###########################
#keep nevermore on until internal voc matches external voc
#this macro takes into account the baseline vocs
###########################
[delayed_gcode REMOVE_VOC_BASELINE]
initial_duration: 0
gcode:
    {% set sensor1 = printer["sgp40 intake"] %}                          #set sensor 1 to chamber voc sensor
    {% set sensor2 = printer["sgp40 exhaust"] %}                          #set sensor 2 to the outside voc sensor
    {% set outside_baseline = printer.save_variables.variables.baseline_outside %} #get the outside baseline value from variables file
    {% set inside_baseline = printer.save_variables.variables.baseline_inside %}   #get the inside baseline value from variables file
    {% set time = 1 %}                                    #set default time to check VOC levels
    {% if sensor1.gas > sensor2.gas %}                                           #check VOC between inside and outside
        UPDATE_DELAYED_GCODE ID=REMOVE_VOC_BASELINE DURATION={TIME} 
        {action_respond_info("End of Print - VOC inside chamber greater than outside chamber ")}
    {% elif sensor1.gas > inside_baseline %}                                        #check VOC between inside current and inside baseline
        UPDATE_DELAYED_GCODE ID=REMOVE_VOC_BASELINE DURATION={TIME} 
        {action_respond_info("End of Print - VOC inside chamber greater than inside chamber baseline")} 
    {% else %}                                                                     # if in else loop then VOC of sensor 1 <= sensor2
        UPDATE_DELAYED_GCODE ID=REMOVE_VOC_BASELINE DURATION=0                              # stop the delayed gcode
        NEVERMORE_OFF                                                              #turn off nevermore - include here any other filter fans
        # STOP_VOC_DATA                                                              #stop the VOC data collection
        #check's VOC outside chamber vs outside chamber baseline
        #can't really do anything about it in the printer except to tell the user to vent the room
        #could keep this in the delayed gcode loop until room clear to continue to warn user
        {action_respond_info("Chamber VOC Removed")}
        {% if sensor2.gas > outside_baseline %}                                   #check outside VOC - cannot do anything but warn user
            {action_respond_info("VENT THE PRINTER ROOM - VOC outside chamber is greater than outside chamber baseline \n"
            "Exhaust SGP40 Gas Level: %.2f ppb\n" 
            "Exhaust baseline Gas level: %.2f ppb" % (
            sensor2.gas,
            outside_baseline))}
        {% else %}                                                                 #Voc outside is less than or equal to voc outside baseline
            {action_respond_info("VOC outside printer below or equal to outside VOC baseline")}
        {% endif %}

    {% endif%}
# [sgp40]
# [aht21]

# # [sgp40 chamber]
# # i2c_bus: i2c0e
# # temperature sensor: aht21 chamber
# # csv_basename: /tmp/sgp40_chamber

# [temperature_sensor chamber]
# sensor_type: AHT21
# i2c_bus: i2c0e
# i2c_mcu: nevermore
# i2c_speed: 400000

# [temperature_sensor voc_chamber]
# sensor_type: sgp40 # Sensor on the top left
# i2c_mcu: nevermore
# i2c_bus: i2c0e
# # ref_temp_sensor: aht21 chamber
# # ref_humidity_sensor: aht21 chamber
# i2c_speed: 400000

# [temperature_sensor exhaust]
# sensor_type: AHT21
# i2c_bus: i2c1e
# i2c_mcu: nevermore
# i2c_speed: 400000

# [temperature_sensor voc_exhaust]
# sensor_type: sgp40 # Sensor on the top left
# i2c_mcu: nevermore
# i2c_bus: i2c1e
# # ref_temp_sensor: aht21 exhaust
# # ref_humidity_sensor: aht21 exhaust
# i2c_speed: 400000